import React, { useState, useEffect } from "react";
// import { useAuth0 } from "@auth0/auth0-react";
import axios from "axios";
import { useParams } from "react-router-dom";

import Container from "@mui/material/Container";
import Icon from "@mui/material/Icon";
import Grid from "@mui/material/Grid";
import Stack from "@mui/material/Stack";

import MKBox from "components/MKBox";
import MKTypography from "components/MKTypography";

// import NavbarDark from "layouts/sections/navigation/navbars/components/NavbarDark";
import DefaultFooter from "examples/Footers/DefaultFooter";
// import SignIn from "layouts/pages/authentication/sign-in";
import FilledInfoCard from "examples/Cards/InfoCards/FilledInfoCard";

import footerRoutes from "footer.routes";

// const routes = [
//   {
//     name: "pages",
//     icon: <Icon>dashboard</Icon>,
//     columns: 1,
//     rowsPerColumn: 2,
//     collapse: [
//       {
//         name: "account",
//         collapse: [
//           {
//             name: "sign in",
//             route: "/authentication/sign-in",
//             component: <SignIn />,
//           },
//         ],
//       },
//     ],
//   },
// ];

function Vulnerability() {
  // const { loginWithRedirect, logout, isAuthenticated } = useAuth0();
  const [isExpanded, setIsExpanded] = useState(false);
  const [vulnerability, setVulnerability] = useState([]);
  const { id } = useParams();

  const MAX_LINES = 2;

  // const handleAuthClick = () => {
  //   if (isAuthenticated) {
  //     logout({ returnTo: window.location.origin });
  //   } else {
  //     loginWithRedirect();
  //   }
  // };
  const toggleExpandText = () => {
    setIsExpanded(!isExpanded);
  };

  useEffect(() => {
    const url = `http://localhost:5000/api/vulnerability-db/${id}`;

    axios
      .get(url)
      .then((response) => {
        console.log("Response: ", response.status);
        return response.data;
      })
      .then((data) => {
        console.log("JSON response:", data);
        setVulnerability(data);
      })
      .catch((error) => {
        console.error("Error fetching vulnerability:", error);
      });
  }, [id]);

  const getTruncatedDescription = (description) => {
    if (description && description.length > 0) {
      const lines = description.split("\n");
      if (lines.length > MAX_LINES) {
        return lines.slice(0, MAX_LINES).join("\n") + "...";
      }
      return description;
    }
    return "";
  };

  return (
    <>
      {/* <NavbarDark
        routes={routes}
        action={{
          type: "internal",
          label: isAuthenticated ? "Logout" : "Sign in",
          color: "default",
        }}
        transparent
        light
        onAuthClick={handleAuthClick}
        isAuthenticated={isAuthenticated}
      /> */}
      <Container sx={{ mt: 4, maxWidth: "100%" }}>
        <Grid container spacing={0} alignItems="center">
          <Grid item xs={12}>
            <MKTypography variant="h3" my={1}>
              {vulnerability.title}
            </MKTypography>
            <MKTypography variant="body2" color="text" mb={2}>
              {getTruncatedDescription(vulnerability.report_description)}
              {vulnerability.report_description && vulnerability.report_description.length > 0 && (
                <MKTypography
                  component="a"
                  href="#"
                  variant="body2"
                  color="info"
                  fontWeight="regular"
                  onClick={toggleExpandText}
                  sx={{
                    width: "max-content",
                    display: "flex",
                    alignItems: "center",
                    cursor: "pointer",
                    "& .material-icons-round": {
                      fontSize: "1.125rem",
                      transform: "translateX(3px)",
                      transition: "transform 0.2s cubic-bezier(0.34, 1.61, 0.7, 1.3)",
                    },
                    "&:hover .material-icons-round, &:focus .material-icons-round": {
                      transform: "translateX(6px)",
                    },
                  }}
                >
                  {isExpanded ? "See less..." : "See more..."}
                  <Icon sx={{ fontWeight: "bold" }}>
                    {isExpanded ? "arrow_upward" : "arrow_forward"}
                  </Icon>
                </MKTypography>
              )}
            </MKTypography>
          </Grid>
        </Grid>
        <Grid
          item
          spacing={0}
          xs={12}
          lg={6}
          sx={{ ml: { xs: -2, lg: "auto" }, mt: { xs: 6, lg: 0 } }}
        >
          <Stack>
            <MKBox display="flex" alignItems="center" p={2}>
              <MKBox
                width="3rem"
                height="3rem"
                variant="gradient"
                bgColor="info"
                color="white"
                coloredShadow="info"
                display="flex"
                alignItems="center"
                justifyContent="center"
                borderRadius="xl"
              >
                <Icon fontSize="small">mediation</Icon>
              </MKBox>
              <MKBox pl={2}>
                <MKTypography variant="body1" color="text">
                  Vulnerability location in lifecycle:
                </MKTypography>
                <MKTypography variant="body2" color="text">
                  {vulnerability.phase}
                </MKTypography>
              </MKBox>
            </MKBox>

            <MKBox display="flex" alignItems="center" p={2}>
              <MKBox
                width="3rem"
                height="3rem"
                variant="gradient"
                bgColor="info"
                color="white"
                coloredShadow="info"
                display="flex"
                alignItems="center"
                justifyContent="center"
                borderRadius="xl"
              >
                <Icon fontSize="small">settings_overscan</Icon>
              </MKBox>
              <MKBox pl={2}>
                <MKTypography variant="body1" color="text">
                  Potentially compromised attributes:
                </MKTypography>
                <MKTypography variant="body2" color="text">
                  {vulnerability.attributeName}
                </MKTypography>
              </MKBox>
            </MKBox>

            <MKBox display="flex" alignItems="center" p={2}>
              <MKBox
                width="3rem"
                height="3rem"
                variant="gradient"
                bgColor="info"
                color="white"
                coloredShadow="info"
                display="flex"
                alignItems="center"
                justifyContent="center"
                borderRadius="xl"
              >
                <Icon fontSize="small">token</Icon>
              </MKBox>
              <MKBox pl={2}>
                <MKTypography variant="body1" color="text">
                  Possible effect of exploitation:
                </MKTypography>
                <MKTypography variant="body2" color="text">
                  {vulnerability.effectName}
                </MKTypography>
              </MKBox>
            </MKBox>
          </Stack>
        </Grid>
        <Grid container spacing={2} justifyContent="center">
          {/* <Grid item xs={12} sm={6} md={4}>
            <MKBox
              p={2}
              sx={{
                textAlign: "left",
              }}
            >
              <MKTypography variant="body1">Publisher:</MKTypography>
              <MKTypography variant="body2">Developer/Deployer details</MKTypography>
            </MKBox>
          </Grid>

          <Grid item xs={12} sm={6} md={4}>
            <MKBox
              p={2}
              sx={{
                textAlign: "left",
              }}
            >
              <MKTypography variant="body1">Recorded date:</MKTypography>
              <MKTypography variant="body2">Cyber Sec Inc.</MKTypography>
            </MKBox>
          </Grid>

          <Grid item xs={12} sm={6} md={4}>
            <MKBox
              p={2}
              sx={{
                textAlign: "left",
              }}
            >
              <MKTypography variant="body1">Last updated date:</MKTypography>
              <MKTypography variant="body2">Cyber Sec Inc.</MKTypography>
            </MKBox>
          </Grid> */}
          <Grid item xs={12} md={4}>
            <FilledInfoCard
              color="info"
              icon="apps"
              title="Publisher:"
              description={vulnerability.reporterOrganization}
            />
          </Grid>
          <Grid item xs={12} md={4}>
            <FilledInfoCard
              color="info"
              icon="apps"
              title="Recorded date:"
              description="10/12/2022"
            />
          </Grid>
          <Grid item xs={12} sm={6} md={4}>
            <FilledInfoCard
              color="info"
              icon="apps"
              title="Last updated date:"
              description="10/12/2022"
            />
          </Grid>
        </Grid>
        <Grid container spacing={2} justifyContent="center">
          <Grid item xs={12} sm={6} md={4}>
            <MKBox
              p={2}
              sx={{
                textAlign: "left",
              }}
            >
              <MKTypography variant="body1">References:</MKTypography>
              <MKTypography variant="body2">Developer/Deployer details</MKTypography>
            </MKBox>
          </Grid>
        </Grid>
      </Container>
      <MKBox pt={6} px={1} mt={6}>
        <DefaultFooter content={footerRoutes} />
      </MKBox>
    </>
  );
}

export default Vulnerability;
